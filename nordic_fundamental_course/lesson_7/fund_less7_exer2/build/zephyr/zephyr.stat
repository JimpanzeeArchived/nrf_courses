ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x874d
  Start of program headers:          52 (bytes into file)
  Start of section headers:          863204 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         5
  Size of section headers:           40 (bytes)
  Number of section headers:         29
  Section header string table index: 28

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00008000 0000e0 000154 00 WAX  0   0  4
  [ 2] text              PROGBITS        00008154 000234 004b7c 00  AX  0   0  4
  [ 3] initlevel         PROGBITS        0000ccd0 004db0 000058 00   A  0   0  4
  [ 4] device_area       PROGBITS        0000cd28 004e08 000050 00   A  0   0  4
  [ 5] sw_isr_table      PROGBITS        0000cd78 004e58 000228 00  WA  0   0  4
  [ 6] _static_thre[...] PROGBITS        0000cfa0 005080 000060 00  WA  0   0  8
  [ 7] tbss              NOBITS          0000d000 0050e0 000004 00 WAT  0   0  4
  [ 8] rodata            PROGBITS        0000d000 0050e0 00020c 00   A  0   0 16
  [ 9] .ramfunc          PROGBITS        20008000 005458 000000 00   W  0   0  1
  [10] datas             PROGBITS        20008000 0052ec 00014c 00  WA  0   0  4
  [11] device_states     PROGBITS        2000814c 005438 000008 00  WA  0   0  1
  [12] k_mutex_area      PROGBITS        20008154 005440 000014 00  WA  0   0  4
  [13] bss               NOBITS          20008168 005458 00040b 00  WA  0   0  8
  [14] noinit            NOBITS          20008578 005458 001540 00  WA  0   0  8
  [15] .comment          PROGBITS        00000000 005458 000020 01  MS  0   0  1
  [16] .debug_aranges    PROGBITS        00000000 005478 001540 00      0   0  8
  [17] .debug_info       PROGBITS        00000000 0069b8 0687ce 00      0   0  1
  [18] .debug_abbrev     PROGBITS        00000000 06f186 00b6f7 00      0   0  1
  [19] .debug_line       PROGBITS        00000000 07a87d 01b7bb 00      0   0  1
  [20] .debug_frame      PROGBITS        00000000 096038 002f00 00      0   0  4
  [21] .debug_str        PROGBITS        00000000 098f38 00c6f0 01  MS  0   0  1
  [22] .debug_loc        PROGBITS        00000000 0a5628 01abe0 00      0   0  1
  [23] .debug_ranges     PROGBITS        00000000 0c0208 004ce8 00      0   0  8
  [24] .ARM.attributes   ARM_ATTRIBUTES  00000000 0c4ef0 000038 00      0   0  1
  [25] .last_section     PROGBITS        0000d374 005454 000004 00   A  0   0  1
  [26] .symtab           SYMTAB          00000000 0c4f28 006e40 10     27 832  4
  [27] .strtab           STRTAB          00000000 0cbd68 006d49 00      0   0  1
  [28] .shstrtab         STRTAB          00000000 0d2ab1 000130 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x0000e0 0x00008000 0x00008000 0x0520c 0x0520c RWE 0x10
  LOAD           0x0052ec 0x20008000 0x0000d20c 0x00168 0x00168 RW  0x4
  LOAD           0x005454 0x0000d374 0x0000d374 0x00004 0x00004 R   0x1
  LOAD           0x000000 0x20008168 0x20008168 0x00000 0x01950 RW  0x8
  TLS            0x0050e0 0x0000d000 0x0000d000 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     rom_start text initlevel device_area sw_isr_table _static_thread_data_area rodata 
   01     datas device_states k_mutex_area 
   02     .last_section 
   03     bss noinit 
   04     tbss 
